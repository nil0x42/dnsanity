# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: true
  
  # Specify the current working directory path
  # the default is the current working directory path
  cwd: /tmp/yyy
  
  # Export additional ENV variables
  env:
    recording: true
  
  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 72
  
  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 21
  
  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0
  
  # Quality
  # 1 - 100
  quality: 100
  
  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto
  
  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 10000
  
  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: github.com/nil0x42/DNSanity
    style:
      backgroundColor: black
      border: 0px black solid
      # boxShadow: none
      # margin: 0px
  
  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9
  
  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block
  
  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"
  
  # The size of the font
  fontSize: 18
  
  # The height of lines
  lineHeight: 1
  
  # The spacing between letters
  letterSpacing: 0
  
  # Theme
  # theme:
  #   background: "transparent"
  #   foreground: "#afafaf"
  #   cursor: "#c7c7c7"
  #   black: "#232628"
  #   red: "#fc4384"
  #   green: "#b3e33b"
  #   yellow: "#ffa727"
  #   blue: "#75dff2"
  #   magenta: "#ae89fe"
  #   cyan: "#708387"
  #   white: "#d5d5d0"
  #   brightBlack: "#626566"
  #   brightRed: "#ff7fac"
  #   brightGreen: "#c8ed71"
  #   brightYellow: "#ebdf86"
  #   brightBlue: "#75dff2"
  #   brightMagenta: "#ae89fe"
  #   brightCyan: "#b1c6ca"
  #   brightWhite: "#f9f9f4"

  theme:
    # background & texte
    background: "transparent"
    foreground: "#afafaf"   # gris clair
    cursor:     "#FFFFFF"   # blanc
  
    # Couleurs standard
    black:   "#000000"
    red:     "#AA0000"
    green:   "#00AA00"
    yellow:  "#AA5500"
    blue:    "#0000AA"
    magenta: "#AA00AA"
    cyan:    "#00AAAA"
    white:   "#AAAAAA"
  
    # Couleurs vives (bright)
    brightBlack:   "#444444"
    brightRed:     "#FF4444"
    brightGreen:   "#44FF44"
    brightYellow:  "#FFFF44"
    brightBlue:    "#4444FF"
    brightMagenta: "#FF44FF"
    brightCyan:    "#44FFFF"
    brightWhite:   "#FFFFFF"

  


# Records, feel free to edit them
records:
  - delay: 325
    content: "\r\e[35mDNSanity@localhost $ \e[33md"
  - delay: 151
    content: 'n'
  - delay: 58
    content: s
  - delay: 198
    content: a
  - delay: 132
    content: 'n'
  - delay: 60
    content: i
  - delay: 411
    content: t
  - delay: 207
    content: 'y'
  - delay: 310
    content: ' '
  - delay: 486
    content: '-'
  - delay: 343
    content: l
  - delay: 66
    content: i
  - delay: 98
    content: s
  - delay: 131
    content: t
  - delay: 241
    content: ' '
  - delay: 186
    content: u
  - delay: 45
    content: 'n'
  - delay: 208
    content: t
  - delay: 44
    content: r
  - delay: 109
    content: u
  - delay: 118
    content: s
  - delay: 163
    content: t
  - delay: 146
    content: e
  - delay: 131
    content: d
  - delay: 121
    content: .
  - delay: 112
    content: t
  - delay: 179
    content: x
  - delay: 167
    content: t
  - delay: 121
    content: "\r\n\e[?2004l\r"
  - delay: 13
    content: "\e[0;90m  ▗▄▄▄ ▗▖  ▗▖ ▗▄▄▖ ▗▄▖ ▗▖  ▗▖▗▄▄▄▖▗▄▄▄▖▗▖  ▗▖\r\n  ▐▌  █▐▛▚▖▐▌▐▌   ▐▌ ▐▌▐▛▚▖▐▌  █    █   ▝▚▞▘\r\n  ▐▌  █▐▌ ▝▜▌ ▝▀▚▖▐▛▀▜▌▐▌ ▝▜▌  █    █    ▐▌\r\n  ▐▙▄▄▀▐▌  ▐▌▗▄▄▞▘▐▌ ▐▌▐▌  ▐▌▗▄█▄▖  █    ▐▌\e[0m\r\n\r\n\r\n\e[1;97m* [step 1/2] Template validation               \e[2;37m⏳--\r\n█ Run: 3 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 10 req/s, never dropped (0/0 in queue)\r\n█ Each test: 2s timeout, up to 2 attempts -> 0% done (0/30)\r\n▏ │\e[32mOK: 0 (0%)            \e[2;37m     0 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▋ │\e[32m                                                            \e[31m\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 1/2] Template validation               \e[2;37m⏳<1m\r\n▎ Run: 3 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 10 req/s, never dropped (3/3 in queue)\r\n█ Each test: 2s timeout, up to 2 attempts -> 20% done (6/30)\r\n▊ │\e[32mOK: 0 (0%)            \e[2;37m     9 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▉ │\e[32m                                                            \e[31m\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 1/2] Template validation               \e[2;37m⏳<1m\r\n█ Run: 3 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 10 req/s, never dropped (3/3 in queue)\r\n▌ Each test: 2s timeout, up to 2 attempts -> 30% done (9/30)\r\n█ │\e[32mOK: 0 (0%)            \e[2;37m    18 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▋ │\e[32m                                                            \e[31m\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 1/2] Template validation               \e[2;37m⏳<1m\r\n█ Run: 3 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 10 req/s, never dropped (3/3 in queue)\r\n▍ Each test: 2s timeout, up to 2 attempts -> 70% done (21/30)\r\n▋ │\e[32mOK: 0 (0%)            \e[2;37m    27 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▊ │\e[32m                                                            \e[31m\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 1/2] Template validation               \e[2;37m⏳<1m\r\n█ Run: 3 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 10 req/s, never dropped (3/3 in queue)\r\n▎ Each test: 2s timeout, up to 2 attempts -> 90% done (27/30)\r\n▋ │\e[32mOK: 0 (0%)            \e[2;37m    24 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▊ │\e[32m                                                            \e[31m\e[2;37m│\e[0m"
  - delay: 31
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 1/2] Template validation               \e[2;37m⏳<1m\r\n▊ Run: 3 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 10 req/s, never dropped (0/3 in queue)\r\n▍ Each test: 2s timeout, up to 2 attempts -> 100% done (30/30)\r\n▉ │\e[32mOK: 3 (100%)          \e[2;37m    24 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▎ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m\e[2;37m│\e[0m\r\n\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳--\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (0/0 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 0% done (0/10000)\r\n▏ │\e[32mOK: 0 (0%)            \e[2;37m     0 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▋ │\e[32m                                                            \e[31m\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 3% done (371/10195)\r\n▊ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▉ │\e[32m                                                            \e[31m\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 4% done (435/10203)\r\n█ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▋ │\e[32m                                                            \e[31m\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 4% done (456/10203)\r\n▋ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m                KO: 0 (0%)\e[2;37m│\r\n▊ │\e[32m                                                            \e[31m\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▎ Each test: 4s timeout, up to 2 attempts -> 4% done (471/10122)\r\n▋ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m                KO: 9 (0%)\e[2;37m│\r\n▊ │\e[32m                                                           \e[31m⢸\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 9% done (807/8566)\r\n▉ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 182 (18%)\e[2;37m│\r\n▎ │\e[32m                                                 \e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▏ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▎ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▊ Each test: 4s timeout, up to 2 attempts -> 10% done (908/8396)\r\n▎ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 201 (20%)\e[2;37m│\r\n▍ │\e[32m                                                \e[31m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n█ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 10% done (910/8396)\r\n▋ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 201 (20%)\e[2;37m│\r\n█ │\e[32m                                                \e[31m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▉ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 14% done (1187/8450)\r\n▍ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 202 (20%)\e[2;37m│\r\n▍ │\e[32m                                               \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 15% done (1333/8456)\r\n▌ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 203 (20%)\e[2;37m│\r\n▌ │\e[32m                                               \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 15% done (1341/8456)\r\n▊ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 203 (20%)\e[2;37m│\r\n▋ │\e[32m                                               \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▍ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 18% done (1488/7889)\r\n▉ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 266 (26%)\e[2;37m│\r\n▌ │\e[32m                                            \e[31m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▉ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▊ Each test: 4s timeout, up to 2 attempts -> 19% done (1551/7781)\r\n▉ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 278 (27%)\e[2;37m│\r\n▉ │\e[32m                                           \e[31m⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▍ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▏ Each test: 4s timeout, up to 2 attempts -> 21% done (1682/7773)\r\n▊ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 279 (27%)\e[2;37m│\r\n▎ │\e[32m                                           \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n█ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 22% done (1763/7816)\r\n▌ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 279 (27%)\e[2;37m│\r\n▏ │\e[32m                                           \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▌ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▎ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▉ Each test: 4s timeout, up to 2 attempts -> 27% done (2120/7835)\r\n▎ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 280 (28%)\e[2;37m│\r\n▊ │\e[32m                                           \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▌ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 28% done (2224/7836)\r\n▍ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 280 (28%)\e[2;37m│\r\n▏ │\e[32m                                           \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 28% done (2236/7836)\r\n▎ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 280 (28%)\e[2;37m│\r\n▊ │\e[32m                                           \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▉ Each test: 4s timeout, up to 2 attempts -> 31% done (2469/7735)\r\n▌ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 296 (29%)\e[2;37m│\r\n▎ │\e[32m                                          \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▋ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▏ Each test: 4s timeout, up to 2 attempts -> 34% done (2634/7615)\r\n▋ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 310 (31%)\e[2;37m│\r\n▏ │\e[32m                                         \e[31m⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 35% done (2678/7616)\r\n▍ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 310 (31%)\e[2;37m│\r\n▏ │\e[32m                                         \e[31m⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 36% done (2810/7687)\r\n▊ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 310 (31%)\e[2;37m│\r\n▊ │\e[32m                                         \e[31m⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 37% done (2913/7684)\r\n▏ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 312 (31%)\e[2;37m│\r\n▎ │\e[32m                                         \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▌ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▉ Each test: 4s timeout, up to 2 attempts -> 40% done (3099/7677)\r\n▏ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 315 (31%)\e[2;37m│\r\n▊ │\e[32m                                         \e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 42% done (3261/7685)\r\n▏ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 318 (31%)\e[2;37m│\r\n▋ │\e[32m                                        \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 45% done (3475/7596)\r\n▊ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 328 (32%)\e[2;37m│\r\n▉ │\e[32m                                        \e[31m⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 48% done (3661/7562)\r\n█ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 332 (33%)\e[2;37m│\r\n▋ │\e[32m                                        \e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 48% done (3670/7562)\r\n▋ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 332 (33%)\e[2;37m│\r\n▊ │\e[32m                                        \e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▎ Each test: 4s timeout, up to 2 attempts -> 50% done (3787/7434)\r\n▋ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 354 (35%)\e[2;37m│\r\n▊ │\e[32m                                      \e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 55% done (4120/7430)\r\n▉ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 356 (35%)\e[2;37m│\r\n▎ │\e[32m                                      \e[31m⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▏ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▎ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▊ Each test: 4s timeout, up to 2 attempts -> 56% done (4171/7430)\r\n▎ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 356 (35%)\e[2;37m│\r\n▍ │\e[32m                                      \e[31m⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n█ Each server: max 2 req/s, dropped if any test fails (500/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 57% done (4237/7328)\r\n▋ │\e[32mOK: 0 (0%)            \e[2;37m   500 req/s\e[31m             KO: 371 (37%)\e[2;37m│\r\n█ │\e[32m                                     \e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K185.124.200.195\r\n172.64.37.117\r\n172.64.36.44\r\n194.69.195.2\r\n45.90.30.227\r\n45.90.30.178\r\n45.90.30.6\r\n45.90.30.248\r\n88.221.163.203\r\n45.90.30.189\r\n45.90.28.227\r\n172.64.37.139\r\n172.64.37.133\r\n45.90.28.247\r\n172.64.36.57\r\n51.68.90.1\r\n83.167.155.134\r\n172.64.36.215\r\n156.154.71.12\r\n8.26.56.35\r\n172.64.36.79\r\n172.64.36.59\r\n45.90.28.77\r\n45.90.28.186\r\n45.90.28.208\r\n172.64.36.9\r\n172.64.36.208\r\n94.187.158.243\r\n194.168.4.123\r\n195.63.103.144\r\n156.154.71.22\r\n156.154.70.7\r\n156.154.71.25\r\n45.90.29.209\r\n8.26.56.182\r\n79.98.147.146\r\n83.175.105.182\r\n79.174.228.211\r\n161.97.172.85\r\n81.169.201.113\r\n37.9.170.176\r\n217.188.85.67\r\n81.93.141.162\r\n8.26.56.25\r\n77.43.73.228\r\n8.26.56.186\r\n185.93.180.140\r\n93.240.228.186\r\n51.210.7.235\r\n46.226.143.86\r\n81.130.148.128\r\n95.97.79.58\r\n195.136.206.181\r\n31.156.55.106\r\n89.114.155.129\r\n188.6.161.26\r\n46.227.67.134\r\n213.125.56.198\r\n217.113.195.244\r\n23.216.53.230\r\n91.90.190.58\r\n45.90.28.171\r\n93.92.202.187\r\n81.201.51.140\r\n45.90.28.3\r\n88.221.163.22\r\n45.90.30.250\r\n162.159.36.247\r\n152.228.172.176\r\n178.33.164.91\r\n96.7.137.162\r\n85.143.164.154\r\n5.134.71.229\r\n8.26.56.222\r\n84.233.182.251\r\n103.86.99.100\r\n45.90.29.77\r\n8.20.247.51\r\n8.20.247.170\r\n23.59.248.145\r\n8.20.247.149\r\n45.90.30.119\r\n45.90.29.119\r\n77.53.35.136\r\n96.7.136.77\r\n8.26.56.206\r\n195.214.240.136\r\n91.228.126.134\r\n185.133.208.32\r\n185.228.168.9\r\n8.26.56.135\r\n173.223.99.3\r\n83.172.181.252\r\n80.66.120.155\r\n176.222.250.62\r\n217.27.214.8\r\n8.20.247.79\r\n172.64.37.165\r\n85.115.130.4\r\n78.30.245.221\r\n8.20.247.85\r\n212.122.52.11\r\n194.44.139.88\r\n212.5.221.202\r\n77.79.248.49\r\n85.214.52.216\r\n94.18.210.70\r\n89.25.240.230\r\n85.58.120.134\r\n195.21.137.153\r\n92.182.5.167\r\n176.107.118.206\r\n93.240.63.136\r\n176.62.79.18\r\n51.68.141.96\r\n162.159.27.162\r\n77.51.186.203\r\n46.40.0.5\r\n93.159.183.102\r\n103.196.38.8\r\n91.194.138.18\r\n195.201.192.29\r\n185.45.244.221\r\n198.153.194.1\r\n80.87.33.242\r\n77.76.190.71\r\n217.119.121.146\r\n78.110.157.178\r\n73.99.96.122\r\n94.24.54.252\r\n204.106.240.4\r\n92.38.43.2\r\n83.244.182.72\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▉ Each server: max 2 req/s, dropped if any test fails (492/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 61% done (4479/7309)\r\n▍ │\e[32mOK: 133 (13%)         \e[2;37m   500 req/s\e[31m             KO: 375 (37%)\e[2;37m│\r\n▍ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿                             \e[31m⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K12.171.191.58\r\n78.107.30.33\r\n80.14.67.41\r\n81.42.248.139\r\n46.107.27.230\r\n216.250.141.137\r\n79.140.22.186\r\n85.200.209.58\r\n194.50.50.3\r\n80.179.255.238\r\n8.43.56.34\r\n41.87.147.158\r\n37.232.47.14\r\n109.125.204.16\r\n89.162.45.54\r\n8.36.139.1\r\n91.187.57.134\r\n209.239.11.98\r\n85.249.6.122\r\n91.224.168.104\r\n89.109.232.83\r\n107.0.218.126\r\n195.162.81.125\r\n91.203.36.75\r\n50.196.170.172\r\n80.27.7.47\r\n92.241.86.102\r\n62.183.54.78\r\n94.20.230.175\r\n13.76.130.172\r\n18.163.103.200\r\n85.143.24.62\r\n169.255.135.218\r\n47.176.183.12\r\n162.253.133.97\r\n168.243.48.33\r\n132.247.71.228\r\n64.16.44.102\r\n190.144.158.18\r\n123.176.98.140\r\n103.93.150.184\r\n203.187.253.106\r\n200.111.82.197\r\n209.90.160.221\r\n223.6.6.169\r\n202.164.153.108\r\n103.178.73.249\r\n121.174.253.216\r\n112.172.7.207\r\n8.242.6.242\r\n126.249.83.70\r\n223.5.5.31\r\n210.1.79.37\r\n177.221.44.173\r\n117.2.18.50\r\n219.163.11.226\r\n41.23.113.90\r\n85.237.33.65\r\n103.146.84.39\r\n103.146.84.20\r\n103.146.84.23\r\n223.5.5.41\r\n223.5.5.124\r\n210.121.229.1\r\n122.55.34.214\r\n203.209.181.154\r\n223.6.6.184\r\n152.200.186.94\r\n223.6.6.68\r\n202.91.41.17\r\n101.198.198.198\r\n223.255.176.195\r\n103.186.53.55\r\n121.121.32.209\r\n178.134.248.178\r\n180.226.237.234\r\n103.178.73.58\r\n202.87.214.253\r\n103.166.75.136\r\n58.71.125.1\r\n125.7.139.15\r\n103.140.24.124\r\n103.145.164.50\r\n123.200.11.90\r\n183.104.157.72\r\n58.69.9.25\r\n103.85.197.37\r\n103.106.57.16\r\n202.87.213.253\r\n45.236.206.12\r\n210.225.153.177\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (397/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 64% done (4674/7275)\r\n▌ │\e[32mOK: 224 (22%)         \e[2;37m   500 req/s\e[31m             KO: 379 (37%)\e[2;37m│\r\n▌ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇                       \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (397/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 64% done (4679/7275)\r\n▊ │\e[32mOK: 224 (22%)         \e[2;37m   500 req/s\e[31m             KO: 379 (37%)\e[2;37m│\r\n▋ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇                       \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K45.90.29.88\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▍ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (371/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 67% done (4786/7108)\r\n▉ │\e[32mOK: 225 (22%)         \e[2;37m   387 req/s\e[31m             KO: 404 (40%)\e[2;37m│\r\n▌ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇                     \e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K45.90.28.8\r\n78.155.172.11\r\n92.42.210.43\r\n85.175.98.233\r\n95.174.101.212\r\n91.191.248.98\r\n82.119.154.40\r\n178.222.249.245\r\n41.174.182.214\r\n77.51.209.243\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▉ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (353/500 in queue)\r\n▊ Each test: 4s timeout, up to 2 attempts -> 71% done (5039/7085)\r\n▉ │\e[32mOK: 235 (23%)         \e[2;37m   500 req/s\e[31m             KO: 412 (41%)\e[2;37m│\r\n▉ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀                    \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K45.90.30.219\r\n172.64.37.204\r\n172.64.47.102\r\n172.64.36.174\r\n76.76.2.33\r\n167.71.34.203\r\n88.221.162.27\r\n172.64.36.49\r\n172.64.37.227\r\n8.26.56.56\r\n8.26.56.24\r\n109.5.33.66\r\n85.187.244.133\r\n92.45.47.114\r\n91.217.40.81\r\n91.220.12.161\r\n213.163.127.229\r\n62.48.163.166\r\n205.171.2.65\r\n45.63.86.216\r\n12.200.199.75\r\n31.22.0.186\r\n202.83.43.81\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▍ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (315/500 in queue)\r\n▏ Each test: 4s timeout, up to 2 attempts -> 73% done (5131/6950)\r\n▊ │\e[32mOK: 258 (25%)         \e[2;37m   500 req/s\e[31m             KO: 427 (42%)\e[2;37m│\r\n▎ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇                  \e[31m⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K190.151.76.90\r\n202.14.14.97\r\n59.125.7.96\r\n95.124.255.217\r\n3.105.53.51\r\n122.18.242.92\r\n203.230.220.2\r\n121.58.246.247\r\n95.66.141.20\r\n172.64.36.87\r\n5.189.162.97\r\n172.64.36.187\r\n92.182.113.155\r\n5.196.43.50\r\n8.26.56.23\r\n172.64.37.77\r\n172.64.37.131\r\n80.15.95.220\r\n45.90.28.86\r\n8.20.247.222\r\n8.20.247.251\r\n178.62.197.147\r\n176.9.11.56\r\n172.64.37.13\r\n96.7.136.188\r\n212.5.196.234\r\n45.90.30.132\r\n172.64.37.88\r\n195.211.219.141\r\n8.20.247.49\r\n162.159.46.197\r\n141.94.143.35\r\n5.9.44.83\r\n8.26.56.108\r\n173.223.98.180\r\n90.183.151.107\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n█ Each server: max 2 req/s, dropped if any test fails (258/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 77% done (5281/6774)\r\n▌ │\e[32mOK: 294 (29%)         \e[2;37m   413 req/s\e[31m             KO: 448 (44%)\e[2;37m│\r\n▏ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇               \e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K91.229.62.10\r\n92.59.185.58\r\n31.146.5.166\r\n92.61.44.7\r\n94.243.131.250\r\n207.191.50.250\r\n192.166.144.12\r\n45.55.147.169\r\n5.96.198.66\r\n209.144.50.123\r\n157.230.8.220\r\n184.177.9.34\r\n91.226.223.235\r\n212.58.26.33\r\n77.39.229.161\r\n65.39.166.131\r\n85.15.189.108\r\n203.150.199.17\r\n218.208.114.28\r\n207.225.44.255\r\n187.157.84.101\r\n64.45.190.98\r\n47.49.148.38\r\n65.114.81.96\r\n96.95.146.25\r\n167.157.20.2\r\n200.1.104.36\r\n182.156.93.102\r\n210.5.56.145\r\n196.12.156.66\r\n14.241.225.212\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▌ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▎ Each server: max 2 req/s, dropped if any test fails (205/500 in queue)\r\n▉ Each test: 4s timeout, up to 2 attempts -> 82% done (5412/6577)\r\n▎ │\e[32mOK: 325 (32%)         \e[2;37m   413 req/s\e[31m             KO: 470 (47%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇           \e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K168.154.245.252\r\n113.161.180.214\r\n103.145.164.153\r\n49.231.250.93\r\n103.118.178.18\r\n186.96.98.138\r\n138.99.205.1\r\n103.135.172.28\r\n124.105.154.238\r\n103.237.147.46\r\n45.90.28.40\r\n172.64.37.100\r\n91.209.233.20\r\n188.117.137.97\r\n81.183.248.195\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▌ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (189/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 83% done (5506/6576)\r\n▍ │\e[32mOK: 340 (34%)         \e[2;37m   485 req/s\e[31m             KO: 471 (47%)\e[2;37m│\r\n▏ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆          \e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K129.7.81.40\r\n50.192.13.172\r\n122.211.89.209\r\n92.62.65.237\r\n179.61.90.22\r\n112.173.44.139\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (183/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 84% done (5576/6576)\r\n▎ │\e[32mOK: 346 (34%)         \e[2;37m   374 req/s\e[31m             KO: 471 (47%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧          \e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K45.90.30.181\r\n45.90.30.172\r\n45.90.30.23\r\n172.64.46.22\r\n96.7.137.250\r\n88.221.163.146\r\n8.20.247.36\r\n45.76.35.187\r\n194.2.0.50\r\n8.20.247.175\r\n89.140.253.194\r\n178.155.72.98\r\n8.25.185.131\r\n41.185.21.252\r\n64.72.212.20\r\n190.60.84.243\r\n190.148.193.146\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (166/500 in queue)\r\n▉ Each test: 4s timeout, up to 2 attempts -> 86% done (5686/6590)\r\n▌ │\e[32mOK: 363 (36%)         \e[2;37m   357 req/s\e[31m             KO: 471 (47%)\e[2;37m│\r\n▎ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧         \e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K62.182.223.11\r\n14.161.36.134\r\n175.29.178.211\r\n110.143.3.83\r\n103.106.56.186\r\n5.149.206.139\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▋ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (160/500 in queue)\r\n▏ Each test: 4s timeout, up to 2 attempts -> 87% done (5745/6590)\r\n▋ │\e[32mOK: 369 (36%)         \e[2;37m   312 req/s\e[31m             KO: 471 (47%)\e[2;37m│\r\n▏ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀        \e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K51.77.129.112\r\n94.131.210.104\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (158/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 88% done (5829/6590)\r\n▍ │\e[32mOK: 371 (37%)         \e[2;37m   312 req/s\e[31m             KO: 471 (47%)\e[2;37m│\r\n▏ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄        \e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K172.64.36.118\r\n8.20.247.139\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (148/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 90% done (5899/6546)\r\n▊ │\e[32mOK: 373 (37%)         \e[2;37m   275 req/s\e[31m             KO: 479 (47%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆        \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K154.14.16.251\r\n45.90.29.163\r\n5.28.131.134\r\n83.211.85.27\r\n62.201.217.194\r\n190.96.93.74\r\n65.141.96.199\r\n82.140.114.174\r\n118.103.239.9\r\n123.30.27.24\r\n183.99.226.197\r\n91.210.26.145\r\n58.96.69.188\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (135/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 91% done (5981/6546)\r\n▏ │\e[32mOK: 386 (38%)         \e[2;37m   275 req/s\e[31m             KO: 479 (47%)\e[2;37m│\r\n▎ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀       \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K45.90.29.182\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▌ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (134/500 in queue)\r\n▉ Each test: 4s timeout, up to 2 attempts -> 91% done (6019/6546)\r\n▏ │\e[32mOK: 387 (38%)         \e[2;37m   250 req/s\e[31m             KO: 479 (47%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄       \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 291
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K77.241.17.70\r\n181.65.232.29\r\n120.72.85.167\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (131/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 92% done (6101/6572)\r\n▏ │\e[32mOK: 390 (39%)         \e[2;37m   230 req/s\e[31m             KO: 479 (47%)\e[2;37m│\r\n▋ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆       \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K45.90.28.180\r\n8.20.247.126\r\n45.90.29.121\r\n172.64.37.250\r\n82.117.201.6\r\n78.131.87.208\r\n82.71.226.4\r\n98.164.41.54\r\n103.20.28.2\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (122/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 93% done (6177/6572)\r\n▊ │\e[32mOK: 399 (39%)         \e[2;37m   230 req/s\e[31m             KO: 479 (47%)\e[2;37m│\r\n▉ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿       \e[31m⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K168.154.160.4\r\n103.187.98.221\r\n103.140.24.148\r\n172.64.36.144\r\n45.90.30.239\r\n45.90.28.67\r\n172.64.37.247\r\n172.64.46.209\r\n172.64.46.62\r\n45.90.30.62\r\n1.0.0.1\r\n76.76.2.38\r\n172.64.36.157\r\n93.158.218.249\r\n8.20.247.201\r\n45.90.30.30\r\n45.90.28.132\r\n172.64.46.202\r\n8.20.247.87\r\n212.78.222.238\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (99/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 94% done (6231/6561)\r\n█ │\e[32mOK: 419 (41%)         \e[2;37m   212 req/s\e[31m             KO: 482 (48%)\e[2;37m│\r\n▋ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀     \e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K213.81.179.186\r\n89.221.247.15\r\n88.157.113.175\r\n216.136.82.113\r\n85.105.160.195\r\n78.25.86.148\r\n50.198.75.41\r\n181.205.142.178\r\n154.73.180.11\r\n189.8.108.104\r\n186.236.102.88\r\n179.191.66.250\r\n210.172.1.251\r\n223.5.5.159\r\n103.178.73.5\r\n218.146.34.200\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (83/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 95% done (6275/6561)\r\n▋ │\e[32mOK: 435 (43%)         \e[2;37m   212 req/s\e[31m             KO: 482 (48%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀    \e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K172.64.36.235\r\n94.76.203.216\r\n96.7.136.199\r\n45.90.29.223\r\n8.26.56.221\r\n8.20.247.202\r\n176.102.137.49\r\n45.90.29.210\r\n8.26.56.160\r\n88.119.142.115\r\n81.7.16.240\r\n85.120.87.50\r\n109.241.116.68\r\n87.197.140.2\r\n79.98.222.23\r\n80.147.181.115\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (65/500 in queue)\r\n▎ Each test: 4s timeout, up to 2 attempts -> 96% done (6327/6571)\r\n▋ │\e[32mOK: 451 (45%)         \e[2;37m   160 req/s\e[31m             KO: 484 (48%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿    \e[31m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K12.12.131.134\r\n67.227.132.89\r\n95.130.177.82\r\n197.159.180.2\r\n177.22.203.220\r\n122.55.31.181\r\n168.227.41.231\r\n191.36.233.100\r\n116.121.27.10\r\n203.237.176.1\r\n103.135.172.31\r\n168.126.63.2\r\n59.1.58.227\r\n103.145.165.91\r\n122.54.69.130\r\n213.223.36.242\r\n114.79.144.95\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (47/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 96% done (6362/6573)\r\n▉ │\e[32mOK: 468 (46%)         \e[2;37m   162 req/s\e[31m             KO: 485 (48%)\e[2;37m│\r\n▎ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀ \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K82.223.149.133\r\n85.187.221.8\r\n144.91.100.75\r\n27.131.191.90\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▏ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▎ Each server: max 2 req/s, dropped if any test fails (43/500 in queue)\r\n▊ Each test: 4s timeout, up to 2 attempts -> 96% done (6373/6575)\r\n▎ │\e[32mOK: 472 (47%)         \e[2;37m    84 req/s\e[31m             KO: 485 (48%)\e[2;37m│\r\n▍ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆ \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K183.81.163.114\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n█ Each server: max 2 req/s, dropped if any test fails (41/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 97% done (6398/6582)\r\n▋ │\e[32mOK: 473 (47%)         \e[2;37m    44 req/s\e[31m             KO: 486 (48%)\e[2;37m│\r\n█ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆ \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K86.32.120.135\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▉ Each server: max 2 req/s, dropped if any test fails (40/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 97% done (6399/6582)\r\n▍ │\e[32mOK: 474 (47%)         \e[2;37m    44 req/s\e[31m             KO: 486 (48%)\e[2;37m│\r\n▍ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇ \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 291
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (40/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 97% done (6421/6604)\r\n▌ │\e[32mOK: 474 (47%)         \e[2;37m    45 req/s\e[31m             KO: 486 (48%)\e[2;37m│\r\n▌ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇ \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K79.143.72.246\r\n177.93.45.236\r\n189.10.242.138\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (37/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 97% done (6426/6604)\r\n▊ │\e[32mOK: 477 (47%)         \e[2;37m    45 req/s\e[31m             KO: 486 (48%)\e[2;37m│\r\n▋ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇ \e[31m⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▍ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (32/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 97% done (6447/6588)\r\n▉ │\e[32mOK: 477 (47%)         \e[2;37m    38 req/s\e[31m             KO: 491 (49%)\e[2;37m│\r\n▌ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇ \e[31m⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▉ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (32/500 in queue)\r\n▊ Each test: 4s timeout, up to 2 attempts -> 97% done (6461/6602)\r\n▉ │\e[32mOK: 477 (47%)         \e[2;37m    23 req/s\e[31m             KO: 491 (49%)\e[2;37m│\r\n▉ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇ \e[31m⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K37.114.34.106\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▍ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (31/500 in queue)\r\n▏ Each test: 4s timeout, up to 2 attempts -> 97% done (6463/6602)\r\n▊ │\e[32mOK: 478 (47%)         \e[2;37m    30 req/s\e[31m             KO: 491 (49%)\e[2;37m│\r\n▎ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇ \e[31m⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n█ Each server: max 2 req/s, dropped if any test fails (17/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 99% done (6481/6502)\r\n▌ │\e[32mOK: 478 (47%)         \e[2;37m    18 req/s\e[31m             KO: 505 (50%)\e[2;37m│\r\n▏ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇\e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K217.15.202.106\r\n89.222.168.18\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▌ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▎ Each server: max 2 req/s, dropped if any test fails (15/500 in queue)\r\n▉ Each test: 4s timeout, up to 2 attempts -> 99% done (6484/6502)\r\n▎ │\e[32mOK: 480 (48%)         \e[2;37m    18 req/s\e[31m             KO: 505 (50%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧\e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K1.9.70.86\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▌ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (14/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 99% done (6487/6504)\r\n▍ │\e[32mOK: 481 (48%)         \e[2;37m     6 req/s\e[31m             KO: 505 (50%)\e[2;37m│\r\n▏ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷\e[31m⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (12/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 99% done (6490/6504)\r\n▎ │\e[32mOK: 481 (48%)         \e[2;37m     2 req/s\e[31m             KO: 507 (50%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷\e[31m⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K77.75.129.206\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (10/500 in queue)\r\n▉ Each test: 4s timeout, up to 2 attempts -> 99% done (6495/6505)\r\n▌ │\e[32mOK: 482 (48%)         \e[2;37m     5 req/s\e[31m             KO: 508 (50%)\e[2;37m│\r\n▎ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷\e[31m⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▋ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (9/500 in queue)\r\n▏ Each test: 4s timeout, up to 2 attempts -> 99% done (6496/6505)\r\n▋ │\e[32mOK: 482 (48%)         \e[2;37m     3 req/s\e[31m             KO: 509 (50%)\e[2;37m│\r\n▏ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷\e[31m⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K88.87.181.244\r\n\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (8/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 99% done (6497/6505)\r\n▍ │\e[32mOK: 483 (48%)         \e[2;37m     3 req/s\e[31m             KO: 509 (50%)\e[2;37m│\r\n▏ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (3/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 99% done (6502/6505)\r\n▊ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 514 (51%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (3/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 99% done (6502/6505)\r\n▏ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 514 (51%)\e[2;37m│\r\n▎ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▌ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (3/500 in queue)\r\n▉ Each test: 4s timeout, up to 2 attempts -> 99% done (6502/6505)\r\n▏ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 514 (51%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▏ Each server: max 2 req/s, dropped if any test fails (3/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 99% done (6502/6505)\r\n▏ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 514 (51%)\e[2;37m│\r\n▋ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▎ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▌ Each server: max 2 req/s, dropped if any test fails (3/500 in queue)\r\n█ Each test: 4s timeout, up to 2 attempts -> 99% done (6502/6505)\r\n▊ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 514 (51%)\e[2;37m│\r\n▉ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▋ Each server: max 2 req/s, dropped if any test fails (3/500 in queue)\r\n▌ Each test: 4s timeout, up to 2 attempts -> 99% done (6502/6505)\r\n█ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 514 (51%)\e[2;37m│\r\n▋ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (3/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 99% done (6502/6505)\r\n▋ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 514 (51%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 292
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n█ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▊ Each server: max 2 req/s, dropped if any test fails (3/500 in queue)\r\n▎ Each test: 4s timeout, up to 2 attempts -> 99% done (6502/6505)\r\n▋ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 514 (51%)\e[2;37m│\r\n▊ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 293
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▍ Each server: max 2 req/s, dropped if any test fails (2/500 in queue)\r\n▍ Each test: 4s timeout, up to 2 attempts -> 99% done (6503/6505)\r\n▉ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 515 (51%)\e[2;37m│\r\n▎ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 294
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▏ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n▎ Each server: max 2 req/s, dropped if any test fails (2/500 in queue)\r\n▊ Each test: 4s timeout, up to 2 attempts -> 99% done (6503/6505)\r\n▎ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 515 (51%)\e[2;37m│\r\n▍ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m"
  - delay: 203
    content: "\e[0m\r\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\e[1A\e[2K\r\n\e[1;97m* [step 2/2] Servers sanitization              \e[2;37m⏳<1m\r\n▊ Run: 1000 servers * 10 tests (max 500 req/s, 1000 threads)\r\n█ Each server: max 2 req/s, dropped if any test fails (0/500 in queue)\r\n▋ Each test: 4s timeout, up to 2 attempts -> 100% done (6505/6505)\r\n▋ │\e[32mOK: 483 (48%)         \e[2;37m     0 req/s\e[31m             KO: 517 (51%)\e[2;37m│\r\n█ │\e[32m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[31m⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\e[2;37m│\e[0m\r\n\r\n\e[1;34m[*] Valid servers: 483/1000 (48.3%)\e[0m\r\n\e[?2004h\e[35mDNSanity@localhost $ \e[33m"
  - delay: 5000
    content: "\r\n"
